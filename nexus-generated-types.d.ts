/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus';
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void; // "Date";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {}

export interface NexusGenRootTypes {
  Mutation: {};
  Product: {
    // root type
    createdAt?: string | null; // String
    id: number; // Int!
    productDetail?: NexusGenRootTypes['ProductDetail'] | null; // ProductDetail
    url: string; // String!
  };
  ProductDetail: {
    // root type
    description?: string | null; // String
    id: number; // Int!
    name: string; // String!
    price: string; // String!
  };
  ProductSummary: {
    // root type
    data: NexusGenRootTypes['Product'][]; // [Product!]!
    totalCount: number; // Int!
  };
  Query: {};
  UploadSummary: {
    // root type
    filename: string; // String!
  };
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
  Upload: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {}

export interface NexusGenFieldTypes {
  Mutation: {
    // field return type
    createProduct: NexusGenRootTypes['Product']; // Product!
  };
  Product: {
    // field return type
    createdAt: string | null; // String
    id: number; // Int!
    productDetail: NexusGenRootTypes['ProductDetail'] | null; // ProductDetail
    url: string; // String!
  };
  ProductDetail: {
    // field return type
    description: string | null; // String
    id: number; // Int!
    name: string; // String!
    price: string; // String!
  };
  ProductSummary: {
    // field return type
    data: NexusGenRootTypes['Product'][]; // [Product!]!
    totalCount: number; // Int!
  };
  Query: {
    // field return type
    products: NexusGenRootTypes['ProductSummary']; // ProductSummary!
    version: string; // String!
  };
  UploadSummary: {
    // field return type
    filename: string; // String!
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    createProduct: {
      // args
      url: string; // String!
    };
  };
  Query: {
    products: {
      // args
      id?: number | null; // Int
      itemPerPage?: number | null; // Int
      page?: number | null; // Int
      url?: string | null; // String
    };
  };
}

export interface NexusGenAbstractResolveReturnTypes {}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames =
  | 'Mutation'
  | 'Product'
  | 'ProductDetail'
  | 'ProductSummary'
  | 'Query'
  | 'UploadSummary';

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = 'Boolean' | 'Date' | 'Float' | 'ID' | 'Int' | 'String' | 'Upload';

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
